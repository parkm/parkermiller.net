---
---

<canvas id="gameOfLife"></canvas>

<script>
  import { GameOfLife } from "./GameOfLife.ts";

  document.addEventListener("DOMContentLoaded", async () => {
    const heroSection = document.querySelector(".hero-section") as HTMLElement;
    const canvas = document.getElementById("gameOfLife") as HTMLCanvasElement;
    if (!canvas || !heroSection) {
      console.error("Required elements not found");
      return;
    }

    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    const game = new GameOfLife(24, 100);
    await game.init(canvas);
    game.start();

    heroSection.addEventListener("mousemove", (event) => {
      const rect = canvas.getBoundingClientRect();
      const x = event.clientX - rect.left;
      const y = event.clientY - rect.top;
      game.handleClick(x, y);
    });

    // Handle window resize and orientation change
    const handleResize = () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
      game.resize();
    };
    window.addEventListener("resize", handleResize);
    window.addEventListener("orientationchange", handleResize);

    // Listen for custom events from SettingsMenu
    window.addEventListener("cellSizeChange", ((event: CustomEvent) => {
      game.setCellSize(event.detail);
    }) as EventListener);

    window.addEventListener("updateIntervalChange", ((event: CustomEvent) => {
      game.setUpdateInterval(event.detail);
    }) as EventListener);

    window.addEventListener("highPerformanceModeChange", ((event: CustomEvent) => {
      game.setHighPerformanceMode(event.detail)
    }) as EventListener)
  });
</script>

<style>
  #gameOfLife {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 1;
    z-index: 10;
    background: black;
  }
</style>
